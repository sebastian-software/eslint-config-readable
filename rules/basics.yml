#######################################################################################
# Basics
#######################################################################################

plugins:
  - babel
  - no-use-extend-native
  - jest
  - codebox

extends:
  - eslint:recommended

# That's required for async/await, class properties and
# other still quite new language features.
parser: babel-eslint

parserOptions:
  ecmaVersion: 2018
  ecmaFeatures:
    impliedStrict: true
    jsx: true
  sourceType: module

env:
  browser: false
  node: false
  shared-node-browser: true
  es6: true
  commonjs: true

globals:
  # Allow access to process.env also in Non-Node environments. We want to
  # protect the user in frontend code to access other NodeJS objects - therefor
  # we do not enable Node-Env globally, but `process.env` should not throw with
  # the `no-undef` rule.
  process: true

rules:
  # Disallow trailing whitespace at the end of lines
  no-trailing-spaces:
    - warn

  # Enforce consistent linebreak style
  linebreak-style:
    - error
    - unix

  # Trailing newlines in non-empty files are a common UNIX idiom.
  eol-last: error

  # If you use the wrong greater than / less than sign in a for loop, it will
  # create an infinite loop condition. This is almost always unintentional.
  for-direction: error

  # Enforce strict mode globally which also happens during bundling
  strict:
    - error
    - global

  # Require Variable Declarations to be at the top of their scope
  # Does not improve maintainability in my opinion... instead makes
  # unused variables harder to track over time. Also a fully new situation
  # with the widely used const/let offerings of modern JS.
  vars-on-top:
    - off

  # Disallow the Unicode Byte Order Mark
  unicode-bom:
    - error
    - never

  # Require or disallow Yoda Conditions
  # Actually interesting that this ugliness should be even something to consider.
  yoda:
    - error
    - never

  # Prevent old style extensions of native objects
  no-use-extend-native/no-use-extend-native:
    - error

  # Babel Plugin settings for compat with Babel parser
  babel/new-cap:
    - error
    - capIsNew: false

  codebox/sort-imports:
    - warn
    - ignoreCase: true
      groups: [
        builtin,  # builtin dependencies go first
        external, # then external dependencies
        [unknown, absolute], # An array inside array of groups means that these two groups share same priority for sorting
        parent,   # then parent
        sibling,  # ...ok, you got it
        index
      ]
      importTypes: [
        default, # Default imports are at top of each group
        named,   # After that - named imports
        all,     # Imports of the whole namespace
        none     # Plain import
      ]

  codebox/sort-named-imports:
    - warn
    - ignoreCase: true
